<%- include("../../views/partials/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
     /* General Styles */
  body {
    font-family: Arial, sans-serif;
    background-color: #f8f9fa;
    margin: 0;
    padding: 0;
  }

  .content-main {
    padding: 20px;
  }

  .content-title {
    font-size: 24px;
    font-weight: bold;
    color: #333;
  }

  /* Form and Input Styling */
  .form-label {
    font-weight: bold;
    margin-bottom: 8px;
  }

  .form-control {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-sizing: border-box;
  }

  /* Buttons */
  .btn {
    padding: 8px 15px;
    border-radius: 5px;
    font-weight: bold;
    transition: background 0.3s ease;
  }

  .btn-primary {
    background-color: #007bff;
    color: white;
    border: 1px solid #007bff;
  }

  .btn-primary:hover {
    background-color: #0056b3;
  }

  .btn-danger {
    background-color: #dc3545;
    color: white;
    border: 1px solid #dc3545;
  }

  .btn-danger:hover {
    background-color: #a71d2a;
  }

  .btn-success {
    background-color: #28a745;
    color: white;
    border: 1px solid #28a745;
  }

  .btn-success:hover {
    background-color: #1e7e34;
  }

  .btn-info {
    background-color: #17a2b8;
    color: white;
    border: 1px solid #17a2b8;
  }

  .btn-info:hover {
    background-color: #117a8b;
  }

  /* Table Styling */
  .table {
    width: 100%;
    margin-top: 20px;
    border-collapse: collapse;
  }

  .table th, .table td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }

  .table th {
    background-color: #f4f7fc;
    color: #555;
    font-weight: bold;
}

  .table tbody tr:hover {
    background-color: #f1f1f1;
  }

  /* Pagination */
  .pagination-container {
    text-align: center;
    margin-top: 20px;
  }

  .pagination a,
  .pagination .current-page {
    display: inline-block;
    padding: 8px 12px;
    margin: 0 3px;
    border-radius: 5px;
    text-decoration: none;
    color: #007bff;
    border: 1px solid #007bff;
  }

  .pagination .current-page {
    background-color: #007bff;
    color: white;
  }

  .pagination a:hover {
    background-color: #0056b3;
    color: white;
  }

  /* Error Messages */
  .error-message {
    color: red;
    font-size: 14px;
    margin-top: 5px;
  }

  /* Badge Styling */
  .badge {
    padding: 5px 10px;
    border-radius: 10px;
    font-size: 14px;
  }

  .alert-success {
    background-color: #28a745;
    color: white;
  }

  .alert-danger {
    background-color: #dc3545;
    color: white;
  }

  /* Card Styling */
  .card {
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    background: white;
    margin-top: 20px;
  }

</style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>
    <header class="card-header text-center mb-20">
      <form action="/admin/category/" method="get" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px">
          <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search"/>
          <button class="btn" type="submit">Search</button>
        </div>
      </form>
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required/>
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                  </tr>
                </thead>
                <tbody>
                    <% cat.reverse().forEach((category, index) => { %>   
                  <tr>
                    <td></td>
                    <td class="text-start"><%= category.name %></td>
                    <td class="text-start"><%= category.description %></td>
                    <td class="text-start">
                      <%= category.offerPrice ? category.offerPrice : "No Offer" %>
                    </td>
                    <td class="text-start">
                      <button class="btn btn-info" onclick="addOffer('<%= category._id %>')">Add Offer</button>
                      <button class="btn btn-danger" onclick="removeOffer('<%= category._id %>')">Remove</button>
                    </td>
                    <td class="text-start">
                      <% if (category.status === "Listed") { %>
                        <span class="badge rounded-pill alert-success" style="width: 60px">Listed</span>
                      <% } else { %>
                        <span class="badge rounded-pill alert-danger" style="width: 60px">Unlisted</span>
                      <% } %>
                    </td>
                    <td class="text-start">
                      <% if (category.status === "Listed") { %>
                        <button class="btn btn-danger toggle-status" data-id="<%= category._id %>" data-status="Listed" style="width: 70px">
                          Unlist
                        </button>
                      <% } else { %>
                        <button class="btn btn-success toggle-status" data-id="<%= category._id %>" data-status="Unlisted" style="width: 70px">
                          List
                        </button>
                      <% } %>
                    </td>
                    <td class="text-start">
                      <a href="/admin/editCategory/<%= category._id %>" class="btn btn-info text-white">Edit</a>
                    </td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="pagination-container text-center mt-4">
      <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %>" class="btn btn-secondary">&laquo; Previous</a>
      <% } %> 
      <% for (let i = 1; i <= totalPages; i++) { %> 
        <% if (i === currentPage) { %>
          <span class="btn btn-primary"><%= i %></span>
        <% } else { %>
          <a href="?page=<%= i %>" class="btn btn-outline-primary"><%= i %></a>
        <% } %> 
      <% } %> 
      <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %>" class="btn btn-secondary">Next &raquo;</a>
      <% } %>
    </div>
  </section>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      document.querySelectorAll(".toggle-status").forEach(button => {
        button.addEventListener("click", function () {
          const categoryId = this.getAttribute("data-id");
          const currentStatus = this.getAttribute("data-status");

          Swal.fire({
            title: "Are you sure?",
            text: `You want to ${currentStatus === "Listed" ? "Unlist" : "List"} this category?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, change it!",
            cancelButtonText: "No, cancel!"
          }).then((result) => {
            if (result.isConfirmed) {
              fetch('/admin/toggleCategoryStatus', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ categoryId, status: currentStatus })
              })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  Swal.fire("Success", `Category ${data.status} successfully!`, "success")
                  .then(() => window.location.reload());
                } else {
                  Swal.fire("Error", data.message, "error");
                }
              })
              .catch(error => {
                console.error("Error:", error);
                Swal.fire("Error", "Something went wrong", "error");
              });
            }
          });
        });
      });
    });
  </script>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script>
    function handleFormSubmit(event) {
        event.preventDefault(); // Prevent default form submission

        if (!validateForm()) {
            return; // Stop execution if validation fails
        }

        // If validation passes, submit the form
        const name = document.getElementsByName("name")[0].value.trim();
        const description = document.getElementById("descriptionId").value.trim();

        fetch('/admin/addCategory', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, description })
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(err => { throw new Error(err.error); });
            }
            return response.json();
        })
        .then(data => {
            Swal.fire("Success", "Category added successfully", "success");
            setTimeout(() => { window.location.reload(); }, 1500);
        })
        .catch(error => {
            Swal.fire("Error", error.message, "error");
        });
    }

    function validateForm() {
        clearErrorMessages();
        let isValid = true;

        const name = document.getElementsByName("name")[0].value.trim();
        const description = document.getElementById("descriptionId").value.trim();

        if (name === "") {
            displayErrorMessage("name-error", "Please enter a name");
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
            isValid = false;
        }

        if (description === "") {
            displayErrorMessage("description-error", "Please enter a description");
            isValid = false;
        }

        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }

    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach((element) => {
            element.innerText = "";
            element.style.display = "none";
        });
    }


  function addOffer(categoryId) {
      Swal.fire({
          title: "Enter Offer Price",
          input: "number",
          inputPlaceholder: "Enter offer price",
          showCancelButton: true,
          confirmButtonText: "Add Offer"
      }).then((result) => {
          if (result.isConfirmed) {
              fetch('/admin/addCategoryOffer', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ categoryId, offerPrice: result.value })
              })
              .then(response => response.json())
              .then(data => {
                  if (data.error) {
                      Swal.fire("Error", data.error, "error");
                  } else {
                      Swal.fire("Success", "Offer added successfully", "success");
                      setTimeout(() => { window.location.reload(); }, 1500);
                  }
              })
              .catch(error => Swal.fire("Error", "Something went wrong", "error"));
          }
      });
  }

  function removeOffer(categoryId) {
      Swal.fire({
          title: "Are you sure?",
          text: "This will remove the offer from the category!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes, remove it!",
          cancelButtonText: "No, cancel!"
      }).then((result) => {
          if (result.isConfirmed) {
              fetch('/admin/removeCategoryOffer', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ categoryId })
              })
              .then(response => response.json())
              .then(data => {
                  if (data.error) {
                      Swal.fire("Error", data.error, "error");
                  } else {
                      Swal.fire("Success", "Offer removed successfully", "success");
                      setTimeout(() => { window.location.reload(); }, 1500);
                  }
              })
              .catch(error => Swal.fire("Error", "Something went wrong", "error"));
          }
      });
  }



  $(document).ready(function () {
    $(".toggle-status").click(function () {
        const categoryId = $(this).data("id");
        const currentStatus = $(this).data("status");

        Swal.fire({
            title: "Are you sure?",
            text: `You want to ${currentStatus === "Listed" ? "Unlist" : "List"} this category?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, change it!",
            cancelButtonText: "No, cancel!"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/admin/toggleCategoryStatus', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ categoryId, status: currentStatus })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire("Success", `Category ${data.status} successfully!`, "success");
                        setTimeout(() => { window.location.reload(); }, 1500);
                    } else {
                        Swal.fire("Error", data.message, "error");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    Swal.fire("Error", "Something went wrong", "error");
                });
            }
        });
    });
});


</script>

<%- include("../../views/partials/admin/footer") %>

